# vim:fdm=marker

# REF:
# extremely useful settings/options:
# https://github.com/akinsho/dotfiles/blob/main/.config/kitty/kitty.conf

# --[ notable maps ] ------------------------------------------------------- {{{
# <super+ctrl+f5>, - reload config
# <super+ctrl+q>, - close kitty window
# <super+ctrl+enter>, - new kitty window
# <super+ctrl+]>, - next kitty window
# <super+ctrl+[>, - previous kitty window
# <super+ctrl+r>, - resize kitty window
# <super+ctrl+.>, - next layout
# <super+ctrl+p>, - last used layout
# <super+ctrl+z>, - goto stack layout
# <super+ctrl+t>, - new tab
# <super+ctrl+l>, - next tab
# <super+ctrl+h>, - previous tab
# <super+ctrl+w>, - close tab
# <super+ctrl+n>n>, - new os window
# <super+ctrl+equal> - increase font size
# <super+ctrl+minus> - decrease font size
# <super+ctrl+0>     - restore font size
#}}}

# --[ fonts ] -------------------------------------------------------------- {{{
# Font family. You can also specify different fonts for the
# bold/italic/bold-italic variants.

# kitty recommends not to use patched fonts:
# REF: https://github.com/kovidgoyal/kitty/discussions/4654
#
# You can get a list of full family names available on your computer by running
# kitty list-fonts

font_family                     CascadiaCode
# bold_font                       CascadiaCode, Bold
# italic_font                     CascadiaCode, Italic
# bold_italic_font                CascadiaCode, Bold Italic

# NOTE: Do not use odd values as these affect how kitty renders margin (in pts)
font_size                       15.0
# https://sw.kovidgoyal.net/kitty/conf.html?highlight=font%20features

# disable ligatures when the cursor is over them so they are easier to edit
disable_ligatures               cursor

# adjust_line_height  1
adjust_line_height 130%

symbol_map U+23FB-U+23FE,U+2B58,U+E200-U+E2A9,U+E0A0-U+E0A3,U+E0B0-U+E0BF,U+E0C0-U+E0C8,U+E0CC-U+E0CF,U+E0D0-U+E0D2,U+E0D4,U+E700-U+E7C5,U+F000-U+F2E0,U+2665,U+26A1,U+F400-U+F4A8,U+F67C,U+E000-U+E00A,U+F300-U+F313,U+E5FA-U+E62B FiraCode Nerd Font

symbol_map U+4E00-U+9FA5 LXGW WenKai Bold

#}}}

# --[ cursor ] ------------------------------------------------------------- {{{
# cursor                          none
# The cursor shape can be one of (block, beam, underline)
cursor_shape     block
cursor_stop_blinking_after      10.0
pointer_shape_when_dragging     hand
#}}}

# --[ mouse ] -------------------------------------------------------------- {{{
copy_on_select                  yes
# -1 effectively means infinite scrollback
scrollback_lines                20000
# The modifiers to use rectangular selection (i.e. to select text in a
# rectangular block with the mouse)
# rectangle_select_modifiers ctrl+alt
mouse_hide_wait                 15
# Set the active window to the window under the mouse when moving the mouse around
focus_follows_mouse             yes
#}}}

# --[ bells ] -------------------------------------------------------------- {{{
enable_audio_bell               no

window_alert_on_bell            no
#}}}

# --[ windows ] ------------------------------------------------------------ {{{
remember_window_size            yes
window_border_width             1.0
window_margin_width             0.0
window_padding_width            15.0
# window_padding_width            4 0 0 0
placement_strategy              top-left
inactive_text_alpha             0.8
# (static,scale,size)
resize_draw_strategy            static
#}}}

# --[ tabs ] --------------------------------------------------------------- {{{
# fade, slant, separator, powerline (slanted, angled, round), custom
tab_bar_style                   custom
tab_separator                   ""
# REF: https://github.com/kovidgoyal/kitty/discussions/4447
tab_fade                        0 0 0 0
tab_title_template              "{fmt.fg._415c6d}{fmt.bg.default} â—‹ {index}:{f'{title[:6]}â€¦{title[-6:]}' if title.rindex(title[-1]) + 1 > 25 else title}{' [ï¡ˆ]' if layout_name == 'stack' else ''} "
active_tab_title_template       "{fmt.fg._83b6af}{fmt.bg.default} ï¤½{index}:{f'{title[:6]}â€¦{title[-6:]}' if title.rindex(title[-1]) + 1 > 25 else title}{' [ï¡ˆ]' if layout_name == 'stack' else ''} "
tab_activity_symbol             none
tab_bar_edge                    top
tab_bar_margin_height           0.0 0.0
active_tab_font_style           bold-italic
inactive_tab_font_style         normal
tab_bar_min_tabs                2
bell_on_tab                     no
# or "ðŸ”” "
#}}}

# --[ advanced ] ----------------------------------------------------------- {{{
# The shell program to execute. The default value of . means
# to use whatever shell is set as the default shell for the current user.
shell                           zsh
shell_integration               no-cursor
allow_remote_control            yes
# listen_on                       unix:/tmp/mykitty
editor                          nvim
single-instance                 yes
#}}}

# --[ os-specific ] -------------------------------------------------------- {{{
draw_minimal_borders                    no
hide_window_decorations                 no
#}}}

# --[ includes ] ----------------------------------------------------------- {{{
# You can include secondary config files via the "include" directive.
# If you use a relative path for include, it is resolved with respect to the
# location of the current config file. For example:
# include ${HOME}/${USER}.conf
# megaforest
include ./current-theme.conf
#}}}

# --[ misc ] --------------------------------------------------------------- {{{
# or 0, 1, 2 (number of tabs)
# REF: https://sw.kovidgoyal.net/kitty/conf/?highlight=margin#opt-kitty.confirm_os_window_close
confirm_os_window_close                 0
dynamic_background_opacity yes
# url_style can be one of: none, single, double, curly
url_style straight
#: The color and style for highlighting URLs on mouse-over. url_style
#: can be one of: none, single, double, curly

open_url_with default
#: The program with which to open URLs that are clicked on. The
#: special value default means to use the operating system's default
#: URL handler.
url_prefixes http https file ftp
#: The set of URL prefixes to look for when detecting a URL under the
#: mouse cursor.
copy_on_select yes
#: Copy to clipboard or a private buffer on select. With this set to
#: clipboard, simply selecting text with the mouse will cause the text
#: to be copied to clipboard. Useful on platforms such as macOS that
#: do not have the concept of primary selections. You can instead
#: specify a name such as a1 to copy to a private kitty buffer
#: instead. Map a shortcut with the paste_from_buffer action to paste
#: from this private buffer. For example::
#:     map cmd+shift+v paste_from_buffer a1
#: Note that copying to the clipboard is a security risk, as all
#: programs, including websites open in your browser can read the
#: contents of the system clipboard.
strip_trailing_spaces never
#: Remove spaces at the end of lines when copying to clipboard. A
#: value of smart will do it when using normal selections, but not
#: rectangle selections. always will always do it.
rectangle_select_modifiers ctrl+alt
#: The modifiers to use rectangular selection (i.e. to select text in
#: a rectangular block with the mouse)
terminal_select_modifiers shift
#: The modifiers to override mouse selection even when a terminal
#: application has grabbed the mouse
select_by_word_characters @-./_~?&=%+#
# map cmd+left click to open URLs
sync_to_monitor yes
visual_bell_duration 0
background_opacity 1.00
pointer_shape_when_dragging hand
# How much to dim text that has the DIM/FAINT attribute set. 1.0 means no dimming and
# 0.0 means fully dimmed (i.e. invisible).
dim_opacity 0.90
allow_hyperlinks yes
close_on_child_death yes
allow_remote_control yes
clipboard_control write-clipboard write-primary read-clipboard
# term xterm-256color
term xterm-kitty

#
# REF: https://github.com/kovidgoyal/kitty/issues/719#issuecomment-952039731
# with a minimal config
# scrollback_pager nvim --noplugin -u ~/.config/kitty/scrollback-pager/nvim/init.vim -c "silent write! /tmp/kitty_scrollback_buffer | te cat /tmp/kitty_scrollback_buffer - "
# with a minimal no-config
# scrollback_pager nvim -c "set norelativenumber nonumber nolist showtabline=0 foldcolumn=0" -c "autocmd TermOpen * normal G" -c "silent! write! /tmp/kitty_scrollback_buffer | te cat /tmp/kitty_scrollback_buffer - "
# scrollback_pager nvim -c 'setlocal number norelativenumber nolist showtabline=0 foldcolumn=0|Man!' -c "autocmd VimEnter * normal G" -

# REF: https://github.com/kristijanhusak/neovim-config/blob/master/kitty/kitty.conf#L21
scrollback_pager nvim --noplugin -u NONE -c 'runtime plugin/man.vim|Man!' -c "autocmd VimEnter * normal G" -c "nnoremap Q :qa!<CR>" -

# --[ keybindings ] -------------------------------------------------------- {{{
# For a list of key names, see: http://www.glfw.org/docs/latest/group__keys.html

# The value of kitty_mod is used as the modifier for all default shortcuts, you
# can change it in your kitty.conf to change the modifiers for all the default
# shortcuts. Default is ctrl+shift
# super is command on mac
kitty_mod super+ctrl
# kitty_mod super

map kitty_mod+v paste_from_clipboard

# font sizes {{{
map kitty_mod+equal             increase_font_size
map kitty_mod+minus             decrease_font_size
map kitty_mod+0                 restore_font_size
# }}}

# map kitty_mod+ctrl+shift+t new_tab
# map ctrl+shift+e input_unicode_character
# map ctrl+shift+u input_unicode_character

# open url in browser
map kitty_mod+o kitten hints
map kitty_mod+u kitten hints

# insert url
map kitty_mod+i>u kitten hints --program -
# insert word
map kitty_mod+i>w kitten hints --type word --program -
# insert line
map kitty_mod+i>l kitten hints --type line --program -
# insert path
map kitty_mod+i>p kitten hints --type path --program -
# insert hash (git commit hash)
map kitty_mod+i>h kitten hints --type hash --program -

# copy url to clip
map kitty_mod+y>u kitten hints --program @
map kitty_mod+y>w kitten hints --type word --program @
map kitty_mod+y>l kitten hints --type line --program @
map kitty_mod+y>p kitten hints --type path --program @
map kitty_mod+y>h kitten hints --type hash --program @
# }}}


# map ctrl+space>ctrl+h launch --type=overlay /usr/local/bin/zsh -c "htop"
# map ctrl+space>ctrl+s launch --type=overlay /usr/local/bin/zsh -ic "slack"
# map ctrl+space>ctrl+n launch --type=overlay /usr/local/bin/zsh -ic "zknew"
# map ctrl+space>ctrl+e launch --type=overlay /usr/local/bin/zsh -c "zk edit --interactive"


# Window management {{{
# The script is a kitty taken from https://sw.kovidgoyal.net/kitty/kittens/custom.html
map kitty_mod+enter      new_window
map kitty_mod+q          close_window
map kitty_mod+n>n        new_os_window
# movements for nvim in kitty, across splits (like tmux-navigate)
# REF: https://github.com/knubie/vim-kitty-navigator
# map ctrl+j kitten pass_keys.py neighboring_window bottom ctrl+j
# map ctrl+k kitten pass_keys.py neighboring_window top    ctrl+k
# map ctrl+h kitten pass_keys.py neighboring_window left   ctrl+h
# map ctrl+l kitten pass_keys.py neighboring_window right  ctrl+l

map kitty_mod+;        detach_window ask
map kitty_mod+]        next_window
map kitty_mod+[        previous_window
map kitty_mod+f        move_window_forward
map kitty_mod+z        goto_layout stack
map kitty_mod+.        next_layout
map kitty_mod+p        last_used_layout
# }}}

# Tab management {{{
action_alias           launch_tab launch --type=tab --cwd=current
map kitty_mod+l        next_tab
map kitty_mod+h        previous_tab
map kitty_mod+t        new_tab

#: New window

# map kitty_mod+enter new_window
# map ctrl+e             kitten autosplit.py
# map ctrl+q             launch --location=vsplit
# map ctrl+c             copy_or_interrupt
map kitty_mod+w        close_tab
# map kitty_mod+alt+t    set_tab_title
# map kitty_mod+.        move_tab_forward

# map ctrl+1 goto_tab 1
# map ctrl+2 goto_tab 2
# map ctrl+3 goto_tab 3
# map ctrl+4 goto_tab 4
# map ctrl+5 goto_tab 5
# map ctrl+6 goto_tab 6
# map ctrl+7 goto_tab 7
# map ctrl+8 goto_tab 8
# map ctrl+9 goto_tab 9
# map ctrl+0 goto_tab 11
# }}}


# -- Custom {{{
map kitty_mod+e open_url_with_hints
# }}}

# Open the kitty shell in a new window/tab/overlay/os_window to control kitty using commands.
# map kitty_mod+a         kitty_shell window

# --[ fin ] --------------------------------------------------------------------


# BEGIN_KITTY_THEME
# Nord
include current-theme.conf
# END_KITTY_THEME
